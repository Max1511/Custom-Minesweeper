<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar W, H, M, A;
W = 0;
H = 0;
M = 0;
A = 1;

pos = 1;
button = -1;
wrong_size_number = false;
wrong_mines_number = false;
wrong_attempts_number = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_up))
{
    if (pos &gt; 1)
        pos--;
}
if (keyboard_check_pressed(vk_down))
{
    if (pos &lt; 5)
        pos++;
}

if (keyboard_check_pressed(ord('1')))
    button = 1;
if (keyboard_check_pressed(ord('2')))
    button = 2;
if (keyboard_check_pressed(ord('3')))
    button = 3;
if (keyboard_check_pressed(ord('4')))
    button = 4;
if (keyboard_check_pressed(ord('5')))
    button = 5;
if (keyboard_check_pressed(ord('6')))
    button = 6;
if (keyboard_check_pressed(ord('7')))
    button = 7;
if (keyboard_check_pressed(ord('8')))
    button = 8;
if (keyboard_check_pressed(ord('9')))
    button = 9;
if (keyboard_check_pressed(ord('0')))
    button = 0;
if (keyboard_check_pressed(vk_backspace))
    button = 10;
if (keyboard_check_pressed(vk_space) or keyboard_check_pressed(vk_enter) and pos == 5)
{
    if (W &gt; 0 and H &gt; 0 and W*H &gt; M and A &gt; 0)
        room_goto(game_room);
    else if (W == 0 or H == 0)
        wrong_size_number = true;
    else if (W*H &lt;= M)
        wrong_mines_number = true;
    else
        wrong_attempts_number = true;
}
if (keyboard_check_pressed(vk_escape))
    game_end();
    
if (pos == 1 and button != -1)
{
    if (button == 10)
        W = W div 10;
    else if (W &lt; 100)
        W = (W * 10) + button;
    button = -1;
    wrong_mines_number = false;
}
if (pos == 2 and button != -1)
{
    if (button == 10)
        H = H div 10;
    else if (H &lt; 100)
        H = (H * 10) + button;
    button = -1;
    wrong_size_number = false;
    wrong_mines_number = false;
}
if (pos == 3 and button != -1)
{
    if (button == 10)
        M = M div 10;
    else if (M &lt; 1000)
        M = (M * 10) + button;
    button = -1;
    wrong_size_number = false;
    wrong_mines_number = false;
}
if (pos == 4 and button != -1)
{
    if (button == 10)
        A = A div 10;
    else if (A &lt; 10 or A == 10 and button == 0)
        A = (A * 10) + button;
    button = -1;
    wrong_attempts_number = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>fullscreen</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);

draw_set_halign(fa_center);
draw_set_font(logo_font);
draw_set_colour(c_white);
draw_text(512, 32, "CUSTOM MINESWEEPER");

draw_set_halign(fa_left);
draw_set_font(main_font);

if (pos == 1) draw_set_colour(c_lime);
else draw_set_colour(c_yellow);
draw_text(40, 200, "Width:");       if (W!=0) draw_text(200, 200, W);
if (pos == 2) draw_set_colour(c_lime);
else draw_set_colour(c_yellow);
draw_text(40, 240, "Height:");      if (H!=0) draw_text(200, 240, H);
if (pos == 3) draw_set_colour(c_lime);
else draw_set_colour(c_yellow);
draw_text(40, 280, "Mines:");       draw_text(200, 280, M);

if (pos == 4) draw_set_colour(c_lime);
else draw_set_colour(c_yellow);
draw_text(40, 380, "Attempts:");    draw_text(200, 380, A);

if (pos == 5) draw_sprite(spr_start2, 0, 384, 488);
else draw_sprite(spr_start1, 0, 384, 488);
draw_set_colour(c_black);
draw_set_halign(fa_center);
draw_set_font(big_font);
draw_text(514, 514, "START");

if (wrong_mines_number)
{
    draw_set_halign(fa_left);
    draw_set_font(main_font);
    draw_set_colour(c_red);
    draw_text(40, 320, "Wrong! Too many mines!");
}

if (wrong_attempts_number)
{
    draw_set_halign(fa_left);
    draw_set_font(main_font);
    draw_set_colour(c_red);
    draw_text(40, 320, "Wrong! There must be at least one attempt!");
}

if (wrong_size_number)
{
    draw_set_halign(fa_left);
    draw_set_font(main_font);
    draw_set_colour(c_red);
    draw_text(40, 320, "Wrong! The length and width must be greater than zero!");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
